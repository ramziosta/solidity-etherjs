const {ethers} = require('ethers');
const fs = require("fs-extra");
const { readFileSync } = fs;

require('dotenv').config();

async function Deploy() {
    const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
    const rr = readFileSync("./SimpleStorage_sol_SimpleStorage.json", "utf8")
    const abi = JSON.parse(readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8"));
    const bin = readFileSync("./SimpleStorage_sol_SimpleStorage.bin", "utf8");



    const contractFactory = new ethers.ContractFactory(abi, bin, wallet);
    console.log("ðŸš€ Deploying, please wait...")
    console.log(contractFactory)
    const contract = await contractFactory.deploy({gasLimit: 6721975, gasPrice: ethers.parseUnits('60', 'gwei')});
    console.log("ðŸ’°" + contract);
    await contract.deploymentTransaction().wait(1);

    const currentFavoriteNumber = await contract.retrieve();  // doesnt read retrieve() it is found in the ABI?
    console.log("Current favorite number is: ", currentFavoriteNumber.toString());
    const transactionResponse = await contract.store(7); // does not read the store function in SimpleStorage.sol
    const updatedFavoriteNumber = await contract.retrieve;
    console.log("Contract deployed to:", contract.address);
    console.log(updatedFavoriteNumber.toString());

}

Deploy().then(() => process.exit(0))
    .catch(error => {
        console.error(error);
        process.exitCode = 1;
    });


//overrides can be :  transactionNonce: 1000000, gasPrice: 100000000000, value: 10000000000000000 , gasPrice: 10000000000
//https://docs.ethers.org/v5/api/contract/contract-factory/#ContractFactory-deploy
//the older the block the more secured, we make sure we have another block attached to the one we just sent up to the chain to make sure we can mine it

// const nonce  = await wallet.getNonce()
// console.log("ðŸ‘¹"+nonce)
// const tx = {
//     nonce: nonce,
//     gasPrice: 20000000000,
//     gasLimit: 6721975,
//     to: null,
//     value: 12222222220,
//     data:"608060405234801561000f575f80fd5b506108f28061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632e64cec1146100595780636057361d146100775780636f760f41146100935780638bab8dd5146100af5780639e7a13ad146100df575b5f80fd5b610061610110565b60405161006e919061029f565b60405180910390f35b610091600480360381019061008c91906102f3565b610118565b005b6100ad60048036038101906100a8919061045a565b610121565b005b6100c960048036038101906100c491906104b4565b6101a5565b6040516100d6919061029f565b60405180910390f35b6100f960048036038101906100f491906102f3565b6101d2565b604051610107929190610575565b60405180910390f35b5f8054905090565b805f8190555050565b6001604051806040016040528083815260200184815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0155602082015181600101908161017b919061079d565b5050508060028360405161018f91906108a6565b9081526020016040518091039020819055505050565b6002818051602081018201805184825260208301602085012081835280955050505050505f915090505481565b600181815481106101e1575f80fd5b905f5260205f2090600202015f91509050805f015490806001018054610206906105d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610232906105d0565b801561027d5780601f106102545761010080835404028352916020019161027d565b820191905f5260205f20905b81548152906001019060200180831161026057829003601f168201915b5050505050905082565b5f819050919050565b61029981610287565b82525050565b5f6020820190506102b25f830184610290565b92915050565b5f604051905090565b5f80fd5b5f80fd5b6102d281610287565b81146102dc575f80fd5b50565b5f813590506102ed816102c9565b92915050565b5f60208284031215610308576103076102c1565b5b5f610315848285016102df565b91505092915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61036c82610326565b810181811067ffffffffffffffff8211171561038b5761038a610336565b5b80604052505050565b5f61039d6102b8565b90506103a98282610363565b919050565b5f67ffffffffffffffff8211156103c8576103c7610336565b5b6103d182610326565b9050602081019050919050565b828183375f83830152505050565b5f6103fe6103f9846103ae565b610394565b90508281526020810184848401111561041a57610419610322565b5b6104258482856103de565b509392505050565b5f82601f8301126104415761044061031e565b5b81356104518482602",
//     chainId:3337,
// }
// const sentTxResponse = await wallet.sendTransaction(tx);
// await sentTxResponse.wait(1);
// console.log(sentTxResponse);

// const deploymentReceipt = await contract.deploymentTransaction().wait(1);
// console.log("âœ…"+deploymentReceipt);
//